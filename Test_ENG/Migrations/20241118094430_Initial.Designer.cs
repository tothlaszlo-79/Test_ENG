// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Test_ENG.Data;

#nullable disable

namespace Test_ENG.Migrations
{
    [DbContext(typeof(TestDbContext))]
    [Migration("20241118094430_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Test_ENG.Models.Categories", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Test1",
                            Description = "Test 1"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Test2",
                            Description = "Test 2"
                        });
                });

            modelBuilder.Entity("Test_ENG.Models.Products", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProductId"));

                    b.Property<int?>("CategoriesCategoryId")
                        .HasColumnType("integer");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoriesCategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            Description = "Product 1",
                            IsActive = true,
                            Price = 10,
                            ProductName = "Product 1"
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1,
                            Description = "Product 2",
                            IsActive = true,
                            Price = 10,
                            ProductName = "Product 2"
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 2,
                            Description = "Product 3",
                            IsActive = true,
                            Price = 10,
                            ProductName = "Product 3"
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 2,
                            Description = "Product 4",
                            IsActive = true,
                            Price = 10,
                            ProductName = "Product 4"
                        });
                });

            modelBuilder.Entity("Test_ENG.Models.Products", b =>
                {
                    b.HasOne("Test_ENG.Models.Categories", null)
                        .WithMany("Products")
                        .HasForeignKey("CategoriesCategoryId");
                });

            modelBuilder.Entity("Test_ENG.Models.Categories", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
